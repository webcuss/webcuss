on:
  - pull_request
env:
  BACKEND_WORK_DIR: ${{ github.workspace }}/server
jobs:
  path-filter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8  # tag=v3.1.0
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50  # tag=v2.11.1
        id: changes
        with:
          filters: |
            server-changes:
              - 'server/**'
    outputs:
      server-filter: ${{ steps.changes.outputs.server-changes }}
  test:
    runs-on: ubuntu-latest
    needs: path-filter
    if: needs.path-filter.outputs.server-filter == 'true'
    env:
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DATABASE: webcuss
    services:
      postgres:
        # PostgreSQL v14
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ env.PG_USER }}
          POSTGRES_PASSWORD: ${{ env.PG_PASSWORD }}
          POSTGRES_DB: ${{ env.PG_DATABASE }}
        ports:
          - 5432:5432
        # Health check
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8  # tag=v3.1.0
      - name: Setup Golang
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f  # tag=v3.3.1
        with:
          go-version: '>=1.19.2'
      - name: "Run tests"
        env:
          DATABASE_URL: postgres://${{ env.PG_USER }}:${{ env.PG_PASSWORD }}@localhost:5432/${{ env.PG_DATABASE }}
          APP_SECRET: ajfUHFfjkaUjhfYAS98*AhffiAasu8OusaUV*ahfq
        run: "go test"
        working-directory: ${{ env.BACKEND_WORK_DIR }}
